<?xml version="1.0"?>
<!-- Generated by NAntBuilder v2.0-->
<project  name="project.hoc.toan.lop.10.automated.build" default="run.all" basedir = "." >
	<description>Builds all Projects</description>
	<!-- property -->
	<property name="base.dir" value="${directory::get-current-directory()}" />
	<property name="log.dir" value=".\project.hoc.toan.lop.10.log" />
	<property name="message" value="build logs" />
	<property name="attachment.path" value="" dynamic="true"/>
	<property name="project.hoc.toan.lop.10"
		value=".\project.hoc.toan.lop.10" />
	
	<tstamp property="build.date.time" pattern="dd-MM-yyyy.HHmm" verbose="true"/>
	
	
	<property name="project.hoc.toan.lop.10.build"
		value=".\project.hoc.toan.lop.10.build" />
	
	<property name="solution.name" value="WebHocToan.sln" />
	
	<property name="solution.path" value="${project.hoc.toan.lop.10.build}\${solution.name}" />
	
	<property name="project.config" value="Debug"/>   	
	<property name="svn.path" value=".\tool\svn.exe"/>
	
	<property name="source.url" value="https://xdpm-group11-15.googlecode.com/svn/trunk/6.%20Source%20Code/"/>
	<property name="source2.url" value="https://xdpm-group11-15.googlecode.com/svn/trunk/7.%20Unit%20Test/"/>
	
	<!-- target --> 
	<target name="run.all" depends="test.unit">    	
    	<call target="sleep" />
    	<echo message = "test.unit is finish"/>
    </target> 
	<target name="build.solution" depends="get.source.project">
    	<echo message="${solution.path}" />	    	
    	<if test="${file::exists(solution.path)}">
    		
    		<exec program="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" commandline="${solution.path} /t:Clean /p:Configuration=${project.config} /v:q" workingdir="." />
    		<exec program="${framework::get-framework-directory(framework::get-target-framework())}\msbuild.exe" commandline="${solution.path} /t:Rebuild /p:Configuration=${project.config} /v:q" workingdir="." />
    		
    		<echo message = "build.solution is finish"/>
			
    	</if>
    </target> 
    <target name="get.source.project" depends="build.init">
    	<if test="${directory::exists(project.hoc.toan.lop.10)}">
    		<exec program="${svn.path}" commandline= "cleanup ${project.hoc.toan.lop.10}"></exec>
    		<exec program="${svn.path}" commandline= "update ${source.url} ${project.hoc.toan.lop.10}"></exec>
    	</if>    	
    	<if test="${directory::exists(project.hoc.toan.lop.10)}">
    		<mkdir dir="${project.hoc.toan.lop.10}" />	
    		<exec program="${svn.path}" commandline="checkout ${source.url} ${project.hoc.toan.lop.10}"/>
    	</if>    	
    	<copy todir="${project.hoc.toan.lop.10.build}">
    		<fileset basedir="${project.hoc.toan.lop.10}">
    			<include name="**/*"/>
    		</fileset>
    	</copy>
    	<echo message = "get.source.project is ok"/>
    </target> 
	<target name="build.init" depends="cleanup">
    	<mkdir dir="${log.dir}" />		
		
		
    	<mkdir dir="${project.hoc.toan.lop.10.build}" />
    	<mkdir dir="${log.dir}" />
    	<echo message = "build.init is ok"/>
    </target>     
    <target name="cleanup">
		<delete>
		<fileset basedir="${log.dir}">
			<include name="*.*" />	
		</fileset>
		</delete>
		
		<delete>
			<fileset basedir=".">
				<include name="project.hoc.toan.lop.10.log.zip" />	
			</fileset>
		</delete>
		
		<delete>
			<fileset basedir="${project.hoc.toan.lop.10.build}">
				<include name="*.*" />	
			</fileset>
		</delete>
		<echo message="cleanup is ok" />	
    </target> 
	<target name="buildutil" depends="build.solution">
	<mkdir dir="Bin" />
    <csc target="library" output=".\Bin\util.dll">
      <sources>
        <includes name=".\project.hoc.toan.lop.10\WebHocToan\Util\*.cs" />
      </sources>
    </csc>
  </target>
	<target name="builddto" depends="buildutil">	    
    <csc target="library" output=".\Bin\dto.dll">
      <sources>
        <includes name=".\project.hoc.toan.lop.10\WebHocToan\Dto\*.cs" />
      </sources>
    </csc>
  </target>
  <target name="builddao" depends="builddto">	   
    <csc target="library" output=".\Bin\dao.dll">
      <sources>
		<includes name=".\project.hoc.toan.lop.10\WebHocToan\Util\*.cs" />
		<includes name=".\project.hoc.toan.lop.10\WebHocToan\Dto\*.cs" />
        <includes name=".\project.hoc.toan.lop.10\WebHocToan\Dao\*.cs" />
      </sources>
    </csc>
  </target>
  <target name="buildbus" depends="builddao">	    
    <csc target="library" output=".\Bin\bus.dll">
      <sources>
		<includes name=".\project.hoc.toan.lop.10\WebHocToan\Util\*.cs"/>
		<includes name=".\project.hoc.toan.lop.10\WebHocToan\Dto\*.cs" />
        <includes name=".\project.hoc.toan.lop.10\WebHocToan\Dao\*.cs" />
		<includes name=".\project.hoc.toan.lop.10\WebHocToan\Bus\*.cs" />
      </sources>
    </csc>
  </target>
   <target name="sleep">
    	<sleep seconds="15" />
    	<echo message="sleep is ok" />	
    	<call target = "build.all"/>
    </target> 
    <target name="test.unit" depends="buildbus" description="runs unit tests">
    	<!-- duyệt qua từng file trong thư mục có đường dẫn là giá trị của filename -->
		<ifnot test="${directory::exists(project.hoc.toan.lop.10.Unittest)}">
    		<mkdir dir="${project.hoc.toan.lop.10.Unittest}" />	
    		<exec program="${svn.path}" commandline="checkout ${source2.url} ${project.hoc.toan.lop.10.Unittest}"/>
    	</ifnot>
    	<foreach property="filename" item="File">
    		<in>
    			<items>
    				<includes name="${filename}*.dll" />
    			</items>
    		</in>
    		<do>
    			<!-- sử dụng NUnit để chạy các file test -->
    			<exec program=".\net-2.0\nunit-console.exe">
    				<arg value="${filename}" />
    				<arg value="/xml:${project.hoc.toan.lop.10.external.test.report}" />
    			</exec>
    		</do>
    	</foreach>
    	
    </target>	
</project>
